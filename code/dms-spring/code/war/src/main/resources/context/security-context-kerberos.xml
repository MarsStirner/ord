<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<global-method-security secured-annotations="enabled" />
	
	<beans:bean id="spnegoEntryPoint" class="org.springframework.security.extensions.kerberos.web.SpnegoEntryPoint" />
	
	<beans:bean id="spnegoAuthenticationProcessingFilter" class="org.springframework.security.extensions.kerberos.web.SpnegoAuthenticationProcessingFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	
	<http entry-point-ref="spnegoEntryPoint">
		<intercept-url pattern="**" access="IS_AUTHENTICATED_FULLY" />
		<custom-filter ref="spnegoAuthenticationProcessingFilter" position="BASIC_AUTH_FILTER" />
		<form-login login-page="/index.xhtml" default-target-url="/"/>
	</http>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="kerberosServiceAuthenticationProvider" /> <!-- Used with SPNEGO -->
		<authentication-provider ref="kerberosAuthenticationProvider"/> <!-- Used with form login -->
	</authentication-manager>
	
	<beans:bean id="kerberosAuthenticationProvider" class="org.springframework.security.extensions.kerberos.KerberosAuthenticationProvider">
		<beans:property name="kerberosClient">
			<beans:bean class="org.springframework.security.extensions.kerberos.SunJaasKerberosClient">
				<beans:property name="debug" value="true"/>
			</beans:bean>
		</beans:property>
		<beans:property name="userDetailsService" ref="userDetailsService"/>
	</beans:bean>
	
	<beans:bean id="kerberosServiceAuthenticationProvider" class="org.springframework.security.extensions.kerberos.KerberosServiceAuthenticationProvider">
		<beans:property name="ticketValidator">
			<beans:bean class="org.springframework.security.extensions.kerberos.SunJaasKerberosTicketValidator">
				<beans:property name="servicePrincipal" value="HTTP/test-node1.niidg.ru@NIIDG.RU" />
				<beans:property name="keyTabLocation" value="classpath:HTTP-test-node1.keytab" />
				<beans:property name="debug" value="true" />
			</beans:bean>
		</beans:property>
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>
	
	<beans:bean class="org.springframework.security.extensions.kerberos.GlobalSunJaasKerberosConfig">
		<beans:property name="debug" value="true" />
	</beans:bean>
	
	<beans:bean id="userDetailsService" class="ru.efive.dms.uifaces.security.impl.AuthenticationUserDetailsGetter">
		<beans:constructor-arg index="0" ref="userDao" />
	</beans:bean>
	
	<beans:bean id="userLoginService" class="ru.efive.dms.uifaces.security.impl.KerberosUserLoginService">
		<beans:constructor-arg index="0" ref="userDao" />
		<beans:constructor-arg index="1" ref="authenticationManager" />
	</beans:bean>
	
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="decisionVoters">
            <beans:list>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter">
                    <beans:property name="rolePrefix" value="ROLE_"/>
                </beans:bean>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
    
</beans:beans>