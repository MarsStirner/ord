<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>file:/usr/local/ord/configuration/jdbc.properties</value>
                <value>file:/usr/local/ord/configuration/mail.properties</value>
                <value>file:/usr/local/ord/configuration/ldap.properties</value>
                <!--<value>jdbc.properties</value>-->
                <!--<value>mail.properties</value>-->
                <!--<value>ldap.properties</value>-->
                <value>classpath:alfresco.properties</value>
                <value>classpath:workflow.properties</value>
            </list>
        </property>
    </bean>

    <bean id="ldapImportService" class="ru.efive.dms.util.LDAPImportService">
        <property name="ldapAddressValue" value="${ldap.address.value}"/>
        <property name="loginValue" value="${ldap.login.value}"/>
        <property name="passwordValue" value="${ldap.password.value}"/>
        <property name="filterValue" value="${ldap.filter.value}"/>
        <property name="baseValue" value="${ldap.base.value}"/>
        <property name="skipBaseValue" value="${ldap.skipbase.value}"/>
    </bean>

    <bean id="alfrescoDao" class="ru.efive.dao.alfresco.AlfrescoDAO">
        <property name="serverUrl" value="${alfresco.server.url}"/>
        <property name="login" value="${alfresco.server.login}"/>
        <property name="password" value="${alfresco.server.password}"/>
        <property name="path" value="${alfresco.server.path}"/>
    </bean>

    <bean id="mailSettings" class="ru.efive.wf.core.MailSettings">
        <property name="jndi" value="${jndi.server}"/>
        <property name="smtpHost" value="${smtp.server}"/>
        <property name="smtpUser" value="${smtp.user}"/>
        <property name="smptPassword" value="${smtp.password}"/>
        <property name="smtpFlag" value="${smtp.flag}"/>
        <property name="testServer" value="${mail.test}"/>
        <property name="sendTo" value="${mail.sendTo}"/>
        <property name="sendFrom" value="${mail.sendFrom}"/>
        <property name="smtpPort" value="${smtp.port}"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="defaultAutoCommit" value="true"/>
        <!--The maximum number of milliseconds that the pool will wait (when there are no available connections) for a connection to be returned before throwing an exception-->
        <property name="maxWait" value="150"/>
        <property name="maxIdle" value="10"/>
        <property name="maxActive" value="100"/>
        <property name="removeAbandoned" value="true"/>
        <property name="logAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="60"/>
        <property name="initialSize" value="10"/>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="select 1"/>
    </bean>


    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <!-- "Abstract" @MappedSuperclass entities -->
                <value>ru.entity.model.mapped.AbstractEntity</value>
                <value>ru.entity.model.mapped.IdentifiedEntity</value>
                <value>ru.entity.model.mapped.DictionaryEntity</value>
                <!-- /"Abstract" @MappedSuperclass entities -->

                <!--User-->
                <value>ru.entity.model.user.User</value>
                <value>ru.entity.model.user.Role</value>
                <value>ru.entity.model.user.Permission</value>
                <value>ru.entity.model.user.Group</value>
                <value>ru.entity.model.enums.GroupType</value>
                <value>ru.entity.model.user.UserAccessLevel</value>
                <value>ru.entity.model.user.Department</value>
                <value>ru.entity.model.user.Position</value>
                <value>ru.entity.model.user.PersonContact</value>
                <value>ru.entity.model.user.Substitution</value>

                <!-- Reference Books -->
                <value>ru.entity.model.user.RbContactInfoType</value>

                <!-- documents -->
                <value>ru.entity.model.mapped.Document</value>
                <value>ru.entity.model.document.IncomingDocument</value>
                <value>ru.entity.model.document.InternalDocument</value>
                <value>ru.entity.model.document.OutgoingDocument</value>
                <value>ru.entity.model.document.RequestDocument</value>
                <value>ru.entity.model.document.PaperCopyDocument</value>
                <value>ru.entity.model.document.ScanCopyDocument</value>
                <value>ru.entity.model.document.OfficeKeepingFile</value>
                <value>ru.entity.model.document.OfficeKeepingVolume</value>
                <value>ru.entity.model.document.Task</value>
                <value>ru.entity.model.document.RecordBookDocument</value>
                <value>ru.entity.model.document.Nomenclature</value>
                <value>ru.entity.model.document.DeliveryType</value>
                <value>ru.entity.model.document.SenderType</value>
                <value>ru.entity.model.document.Region</value>
                <value>ru.entity.model.document.DocumentForm</value>
                <value>ru.entity.model.crm.Contragent</value>
                <value>ru.entity.model.crm.Contact</value>
                <value>ru.entity.model.crm.ContragentNomenclature</value>
                <value>ru.entity.model.document.Numerator</value>
                <value>ru.entity.model.document.ReportTemplate</value>
                <!-- /documents -->

                <!-- workflow -->
                <value>ru.entity.model.document.HistoryEntry</value>
                <value>ru.entity.model.wf.RouteTemplate</value>
                <value>ru.entity.model.wf.HumanTaskTreeNode</value>
                <value>ru.entity.model.wf.HumanTaskTree</value>
                <value>ru.entity.model.wf.HumanTask</value>
                <!-- /workflow -->
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
                <prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop>
                <prop key="hibernate.default_batch_fetch_size">10</prop>
                <prop key="hibernate.max_fetch_depth">2</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.jdbc.use_get_generated_keys">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.jdbc.fetch_size">10</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.dbcp.whenExhaustedAction">2</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
            </props>
        </property>
    </bean>

    <!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

    <!-- Data access object: Hibernate implementation. -->

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative
         to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="save">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="userDao" class="ru.efive.sql.dao.user.UserDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="roleDao" class="ru.efive.sql.dao.user.RoleDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="roleDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="roleDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="groupDao" class="ru.efive.sql.dao.user.GroupDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="groupDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="groupDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="incomingDao" class="ru.efive.dms.dao.IncomingDocumentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="incomingDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="incomingDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="numeratorDao" class="ru.efive.dms.dao.NumeratorDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="numeratorDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="numeratorDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="scanDao" class="ru.efive.dms.dao.ScanCopyDocumentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="scanDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="scanDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="internalDao" class="ru.efive.dms.dao.InternalDocumentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="internalDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="internalDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="outgoingDao" class="ru.efive.dms.dao.OutgoingDocumentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="outgoingDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="outgoingDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="paperCopyDao" class="ru.efive.dms.dao.PaperCopyDocumentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="paperCopyDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="paperCopyDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="requestDao" class="ru.efive.dms.dao.RequestDocumentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="requestDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="requestDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="taskDao" class="ru.efive.dms.dao.TaskDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="taskDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="taskDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="recordBookDao" class="ru.efive.dms.dao.RecordBookDocumentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="recordBookDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="recordBookDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="officeKeepingFileDao" class="ru.efive.dms.dao.OfficeKeepingFileDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="officeKeepingFileDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="officeKeepingFileDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="officeKeepingVolumeDao" class="ru.efive.dms.dao.OfficeKeepingVolumeDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="officeKeepingVolumeDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="officeKeepingVolumeDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="documentFormDao" class="ru.efive.dms.dao.DocumentFormDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="documentFormDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="documentFormDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="userAccessLevelDao" class="ru.efive.sql.dao.user.UserAccessLevelDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userAccessLevelDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userAccessLevelDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>


    <bean id="departmentDao" class="ru.efive.sql.dao.user.DepartmentDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="positionDao" class="ru.efive.sql.dao.user.PositionDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="nomenclatureDao" class="ru.efive.dms.dao.NomenclatureDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="nomenclatureDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="nomenclatureDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="deliveryTypeDao" class="ru.efive.dms.dao.DeliveryTypeDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="deliveryTypeDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="deliveryTypeDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="groupTypeDao" class="ru.efive.sql.dao.user.GroupTypeDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="groupTypeDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="groupTypeDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>


    <bean id="contactTypeDao" class="ru.efive.sql.dao.user.RbContactTypeDAO">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="cotactTypeDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="contactTypeDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="senderTypeDao" class="ru.efive.dms.dao.SenderTypeDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="senderTypeDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="senderTypeDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="regionDao" class="ru.efive.dms.dao.RegionDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="regionDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="regionDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="contragentDao" class="ru.efive.crm.dao.ContragentDAOHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="contragentDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="contragentDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="contragentNomenclatureDao" class="ru.efive.crm.dao.NomenclatureDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="contragentNomenclatureDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="contragentNomenclatureDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="historyDao" class="ru.efive.dms.dao.HistoryDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="historyDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="historyDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="engineDao" class="ru.efive.wf.core.dao.EngineDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="engineDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="engineDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="reportDao" class="ru.efive.dms.dao.ReportDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="reportDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="reportDao"/>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="substitutionDao" class="ru.efive.dms.dao.ejb.SubstitutionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


</beans>